[tool.poetry]
name = "filekitty"
packages = [{ include = "filekitty", from = "src" }]
version = "0.2.3"
description = "Select and concatenate file contents, useful for providing context to LLMs and generative AI."
authors = ["Rob Banagale <rob@banagale.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
pyqt5 = "^5.15.10"
setuptools = "==70.3.0" # Keep specific version if needed for py2app compatibility
rich = "^13"

[tool.poetry.group.dev.dependencies]
py2app = "^0.28.7"
ruff = "^0.9.6"
pre-commit = "^4.1.0"
dmgbuild = "^1.6.5"

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"


[[tool.poetry.include]]
path = "src/filekitty/resources/icon"


[tool.poetry.scripts]
filekitty = "filekitty.app_logic:main"
format = "tools.format:main"
filekitty-release = "tools.release:main"
filekitty-validate = "tools.packaging.validate_release:main"
filekitty-sign = "tools.packaging.sign_and_notarize:main"

[tool.ruff]
line-length = 120
target-version = "py312"
exclude = [".venv", ".git", "__pycache__", ".mypy_cache", ".pytest_cache", "node_modules", "build", "dist"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"

[tool.ruff.lint]
# Keeping existing lint rules
select = ["E", "F", "W", "I", "B", "UP"]
ignore = []
fixable = ["E", "F", "I"]

[tool.pytest.ini_options]
addopts = "--strict-markers"
testpaths = ["tests"]
